name: Automation for release on slab

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Print to STDOUT
        run: echo The test worked
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  latest-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Find Latest Release
        id: release
        uses: actions/github-script@v6
        with:
          script: |
            const query = `
            query($owner:String!, $name:String!) {
              repository(name: $name, owner: $owner) {
                latestRelease {
                  name
                  author{
                    name
                  }
                  createdAt
                  publishedAt
                  description
                }
              }
            }
            `
            const result = await github.graphql(query, {
              owner: context.repo.owner,
              name: context.repo.repo,
            })
            const name = result.repository.latestRelease.name
            console.log(result)
            return result
            
      - name: Read result
        env:
          RELEASE: ${{steps.release.outputs.result}}
        uses: actions/github-script@v6
        with:
          script: |
            const { RELEASE } = process.env
            console.log(RELEASE)
            
      - name: post on slab
        id: myRequest
        uses: fjogeleit/http-request-action@v1
        with:
          url: https://api.slab.com/v1/graphql
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Authorization": "${{ secrets.SLAB_TOKEN }}"}'
          data: |
            '{"query": " mutation { createPost(topicId: ${{secrets.SECRET_TOPICID}}) {title, id}}"}'
      
      - name: Show Response
        run: |
          echo ${{ steps.myRequest.outputs.response }}
          echo ${{ steps.myRequest.outputs.headers }}
          echo ${{ fromJson(steps.myRequest.outputs.response).title }}
    
